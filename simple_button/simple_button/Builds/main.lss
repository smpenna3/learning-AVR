
Builds/main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000000a0  00000114  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000a0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000004c8  00000000  00000000  00000114  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c00  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  000011dc  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000011f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000000be  00000000  00000000  00001210  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000014  00000000  00000000  000012ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000058  00000000  00000000  000012e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 4e 00 	jmp	0x9c	; 0x9c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

int main(void)
{
    
    // Set all three pins to output
    LED_DDR |= (1 << RED_PIN) | (1 << GREEN_PIN) | (1 << BLUE_PIN);
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	88 66       	ori	r24, 0x68	; 104
  84:	8a b9       	out	0x0a, r24	; 10
    
    // Set Button to input
    BUTTON_DDR &= ~(1<<BUTTON);
  86:	3b 98       	cbi	0x07, 3	; 7
    
    // Set internal pull-up resistor
    BUTTON_PORT |= (1<<BUTTON);
  88:	43 9a       	sbi	0x08, 3	; 8
    // (same as PORTC |= (1<<3) )
    
    while (1)
    {
        if ( (BUTTON_PIN & (1<<BUTTON)) == 0 )
  8a:	33 99       	sbic	0x06, 3	; 6
  8c:	03 c0       	rjmp	.+6      	; 0x94 <main+0x14>
            LED_PORT |= (1<<RED_PIN) | (1<<BLUE_PIN) | (1<<GREEN_PIN);
  8e:	8b b1       	in	r24, 0x0b	; 11
  90:	88 66       	ori	r24, 0x68	; 104
  92:	02 c0       	rjmp	.+4      	; 0x98 <main+0x18>
        else
            LED_PORT &= ~( (1<<RED_PIN) | (1<<BLUE_PIN) | (1<<GREEN_PIN) );
  94:	8b b1       	in	r24, 0x0b	; 11
  96:	87 79       	andi	r24, 0x97	; 151
  98:	8b b9       	out	0x0b, r24	; 11
  9a:	f7 cf       	rjmp	.-18     	; 0x8a <main+0xa>

0000009c <_exit>:
  9c:	f8 94       	cli

0000009e <__stop_program>:
  9e:	ff cf       	rjmp	.-2      	; 0x9e <__stop_program>
